# Basic Magento docker-compose
version: '3.6'
services:
  nginx:
    image: nginx:latest
    hostname: localhost
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:rw
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - magento
    depends_on:
      - mysql
      - redis
      - php-fpm
    extra_hosts:
      - "host.docker.internal:host-gateway"

  php-fpm:
    build: ./docker-compose/php-fpm
    user: www-data
    ports:
      - 9000
      - 9003
    volumes:
      - ./src:/var/www/html:rw
      - ~/.composer:/var/www/.composer
      - ~/.ssh:/var/www/.ssh
    networks:
      - magento
    depends_on:
      - mysql
      - redis
      - opensearch
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_IDE_CONFIG: "serverName=localhost"

  mysql:
    image: mysql:8.0
    ports:
      - 3306
    networks:
      - magento
    volumes:
      - ./docker-compose/mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - mysqldata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    tmpfs:
      - /tmp

  opensearch:
    build: ./docker-compose/opensearch
    ports:
      - 9200
    networks:
      - magento
    environment:
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -Xss1m"
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - script.painless.regex.enabled=true
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
    volumes:
      - esdata:/usr/share/elasticsearch/data

  redis:
    image: redis:7.0
    ports:
      - 6379
    networks:
      - magento

networks:
  magento:
    driver: bridge

volumes:
  mysqldata:
  esdata:
